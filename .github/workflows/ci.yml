name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        language: [python, java, cpp, js, go]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up ${{ matrix.language }}
        run: |
          LANGUAGE="${{ matrix.language }}"

          if [ "$LANGUAGE" = "python" ]; then
            python -m pip install --upgrade pip

          elif [ "$LANGUAGE" = "java" ]; then
            sudo apt-get update
            sudo apt-get install -y maven

          elif [ "$LANGUAGE" = "cpp" ]; then
            sudo apt-get update
            sudo apt-get install -y build-essential

          elif [ "$LANGUAGE" = "js" ]; then
            curl -sL https://deb.nodesource.com/setup_18.x | sudo -E bash -
            sudo apt-get install -y nodejs

          elif [ "$LANGUAGE" = "go" ]; then
            wget https://go.dev/dl/go1.21.5.linux-amd64.tar.gz
            sudo tar -C /usr/local -xzf go1.21.5.linux-amd64.tar.gz
            echo "PATH=/usr/local/go/bin:$PATH" >> $GITHUB_ENV

          elif ["$LANGUAGE" = "csharp"]; then
            sudo apt-get update
            sudo apt-get install -y mono-complete
          fi

      - name: Install dependencies and run tests
        run: |
          LANGUAGE="${{ matrix.language }}"

          if [ "$LANGUAGE" = "python" ]; then
            export PYTHONPATH=languages/python
            if [ -f languages/python/requirements.txt ]; then
              pip install -r languages/python/requirements.txt || exit 1
            fi
            if [ -d languages/python/tests ]; then
              python -m unittest discover -v languages/python/tests
            else
              echo "No Python tests found."
            fi

          elif [ "$LANGUAGE" = "java" ]; then
            if [ -f languages/java/pom.xml ]; then
              mvn -f languages/java clean test
            else
              echo "No Java project (pom.xml) found."
            fi

          elif [ "$LANGUAGE" = "cpp" ]; then
            cpp_files=$(find languages/cpp -name "*.cpp")
            if [ -z "$cpp_files" ]; then
              echo "No C++ source files found."
            else
              g++ $cpp_files -std=c++17 -o cpp_tests && ./cpp_tests
            fi

          elif [ "$LANGUAGE" = "js" ]; then
            if [ -f languages/js/package.json ]; then
              cd languages/js
              npm install
              npm test
            else
              echo "No JS project found."
            fi

          elif [ "$LANGUAGE" = "go" ]; then
            export PATH="/usr/local/go/bin:$PATH"
            if [ -f languages/go/go.mod ]; then
              cd languages/go
              go test ./...
            else
              echo "No Go module found."
            fi
          fi

          elif [ "$LANGUAGE" = "csharp" ]; then
            if [ -f languages/csharp/Project.csproj ]; then
              cd languages/csharp
              dotnet restore
              dotnet test
            else
              echo "No C# project found."
            fi
          fi
